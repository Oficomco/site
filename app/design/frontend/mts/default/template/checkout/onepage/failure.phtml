<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<div class="page-title">
    <h1><?php echo $this->__('An error occurred in the process of payment') ?></h1>
</div>
<?php if ($this->getRealOrderId()) : ?><p><?php echo $this->__('Order #') . $this->getRealOrderId() ?></p><?php endif ?>
<?php if ($error = $this->getErrorMessage()) : ?><p><?php echo $error ?></p><?php endif ?>
<p><?php echo $this->__('Click <a href="%s">here</a> to continue shopping.', $this->getContinueShoppingUrl()) ?></p>

<?php

$orderId = Mage::getSingleton('checkout/session') -> getLastOrderId();
$order = Mage::getModel('sales/order') -> load($orderId);
$status = $order->getStatus();
$items = $order -> getAllVisibleItems();


//if($status == 'canceled'):
foreach ($items as &$item) {
      $name = $item -> getName();
      $price = $item -> getPrice();
      $sku = $item -> getSku();
      $qty = $item -> getQtyToInvoice();

      $product_model = Mage::getModel('catalog/product');
      $productid = $product_model->getIdBySku($sku);
      $my_product = $product_model->load($productid);
      

      $cart = Mage::getModel('checkout/cart');
      $cart->init();
      $cart->addProduct($my_product, array('qty' => $qty));
      $cart->save();
      Mage::getSingleton('checkout/session')->setCartWasUpdated(true);
}
//endif;

?>